memberSearchIndex = [{"p":"javachess.javachessfx.backend","c":"Chessboard","l":"addMoveToNotation(int, int, int, int)","u":"addMoveToNotation(int,int,int,int)"},{"p":"javachess.javachessfx.window","c":"GameController","l":"addPieces()"},{"p":"javachess.javachessfx.backend","c":"Chessboard","l":"algebraicNotation"},{"p":"javachess.javachessfx.window","c":"GameController","l":"algebraicNotationField"},{"p":"javachess.javachessfx.backend","c":"Chessboard","l":"areCoordinatesInChessboard(int, int)","u":"areCoordinatesInChessboard(int,int)"},{"p":"javachess.javachessfx.backend.pieces","c":"Bishop","l":"Bishop(char)","u":"%3Cinit%3E(char)"},{"p":"javachess.javachessfx.backend.pieces","c":"Bishop","l":"Bishop(Piece)","u":"%3Cinit%3E(javachess.javachessfx.backend.pieces.Piece)"},{"p":"javachess.javachessfx.window","c":"GameController","l":"black_time"},{"p":"javachess.javachessfx.backend","c":"Chessboard","l":"blackDeadPieces"},{"p":"javachess.javachessfx.window.util","c":"GameTime","l":"blackPlayTimeMinutes"},{"p":"javachess.javachessfx.window.util","c":"GameTime","l":"blackPlayTimeSeconds"},{"p":"javachess.javachessfx.backend","c":"Chessboard","l":"board"},{"p":"javachess.javachessfx.backend","c":"Chessboard","l":"boardSize"},{"p":"javachess.javachessfx.backend","c":"Chessboard","l":"changeCurrentMove()"},{"p":"javachess.javachessfx.window","c":"GameController","l":"changePane(MouseEvent)","u":"changePane(javafx.scene.input.MouseEvent)"},{"p":"javachess.javachessfx.backend.pieces","c":"Bishop","l":"changeState()"},{"p":"javachess.javachessfx.backend.pieces","c":"King","l":"changeState()"},{"p":"javachess.javachessfx.backend.pieces","c":"Knight","l":"changeState()"},{"p":"javachess.javachessfx.backend.pieces","c":"Pawn","l":"changeState()"},{"p":"javachess.javachessfx.backend.pieces","c":"Piece","l":"changeState()"},{"p":"javachess.javachessfx.backend.pieces","c":"Queen","l":"changeState()"},{"p":"javachess.javachessfx.backend.pieces","c":"Rook","l":"changeState()"},{"p":"javachess.javachessfx.backend","c":"Chessboard","l":"checkIfKingIsSafe(char)"},{"p":"javachess.javachessfx.window","c":"GameController","l":"chessboard"},{"p":"javachess.javachessfx.backend","c":"Chessboard","l":"Chessboard()","u":"%3Cinit%3E()"},{"p":"javachess.javachessfx.backend","c":"Chessboard","l":"Chessboard(Chessboard)","u":"%3Cinit%3E(javachess.javachessfx.backend.Chessboard)"},{"p":"javachess.javachessfx.window","c":"PromotionWindowController","l":"choosePawn(MouseEvent)","u":"choosePawn(javafx.scene.input.MouseEvent)"},{"p":"javachess.javachessfx.window","c":"PromotionWindowController","l":"chosenPawn"},{"p":"javachess.javachessfx.window","c":"Piece","l":"circle"},{"p":"javachess.javachessfx.backend.pieces","c":"Piece","l":"color"},{"p":"javachess.javachessfx.backend.pieces","c":"Piece","l":"compareTo(Piece)","u":"compareTo(javachess.javachessfx.backend.pieces.Piece)"},{"p":"javachess.javachessfx.window","c":"GameController","l":"configPane"},{"p":"javachess.javachessfx.backend","c":"Chessboard","l":"currentMove"},{"p":"javachess.javachessfx.window","c":"GameController","l":"currentPane"},{"p":"javachess.javachessfx.window","c":"GameController","l":"dead_black_pieces"},{"p":"javachess.javachessfx.window","c":"GameController","l":"dead_white_pieces"},{"p":"javachess.javachessfx.window","c":"GameController","l":"dragged(MouseEvent, Piece)","u":"dragged(javafx.scene.input.MouseEvent,javachess.javachessfx.window.Piece)"},{"p":"javachess.javachessfx.window","c":"Piece","l":"draw()"},{"p":"javachess.javachessfx.window","c":"GameController","l":"dropFile(DragEvent)","u":"dropFile(javafx.scene.input.DragEvent)"},{"p":"javachess.javachessfx.exceptions","c":"EmptySquareException","l":"EmptySquareException()","u":"%3Cinit%3E()"},{"p":"javachess.javachessfx.exceptions","c":"EmptySquareException","l":"EmptySquareException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"javachess.javachessfx.backend","c":"Chessboard","l":"executeMove(int, int, int, int)","u":"executeMove(int,int,int,int)"},{"p":"javachess.javachessfx.window","c":"GameController","l":"GameController()","u":"%3Cinit%3E()"},{"p":"javachess.javachessfx.window","c":"GameController","l":"gameField"},{"p":"javachess.javachessfx.window","c":"GameController","l":"gamePane"},{"p":"javachess.javachessfx.window","c":"GameController","l":"gameTime"},{"p":"javachess.javachessfx.window.util","c":"GameTime","l":"GameTime(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"javachess.javachessfx.backend","c":"Chessboard","l":"getAlgebraicNotation()"},{"p":"javachess.javachessfx.backend","c":"Chessboard","l":"getBlackDeadPieces()"},{"p":"javachess.javachessfx.window.util","c":"GameTime","l":"getBlackPlayTimeMinutes()"},{"p":"javachess.javachessfx.window.util","c":"GameTime","l":"getBlackPlayTimeSeconds()"},{"p":"javachess.javachessfx.backend","c":"Chessboard","l":"getBoard()"},{"p":"javachess.javachessfx.backend","c":"Chessboard","l":"getChessboardOfFalse()"},{"p":"javachess.javachessfx.backend","c":"Chessboard","l":"getChessboardOfPossibleMovesFromSquareAt(int, int)","u":"getChessboardOfPossibleMovesFromSquareAt(int,int)"},{"p":"javachess.javachessfx.backend","c":"Chessboard","l":"getChessboardWithExecutedMoveWithoutCheckingIfMoveIsLegal(Chessboard, int, int, int, int)","u":"getChessboardWithExecutedMoveWithoutCheckingIfMoveIsLegal(javachess.javachessfx.backend.Chessboard,int,int,int,int)"},{"p":"javachess.javachessfx.backend.pieces","c":"Piece","l":"getChessBoardWithLineOfPossibleMoves(Chessboard, boolean[][], int, int, int, int)","u":"getChessBoardWithLineOfPossibleMoves(javachess.javachessfx.backend.Chessboard,boolean[][],int,int,int,int)"},{"p":"javachess.javachessfx.backend.pieces","c":"Piece","l":"getColor()"},{"p":"javachess.javachessfx.backend","c":"Chessboard","l":"getCurrentMove()"},{"p":"javachess.javachessfx.window.util","c":"GameTime","l":"getInitialPlayTimeMinutes()"},{"p":"javachess.javachessfx.window.util","c":"GameTime","l":"getInitialPlayTimeSeconds()"},{"p":"javachess.javachessfx.backend.pieces","c":"Piece","l":"getLetter()"},{"p":"javachess.javachessfx.backend.pieces","c":"Piece","l":"getLetterOfPiece()"},{"p":"javachess.javachessfx.backend","c":"Chessboard","l":"getLetterOfPieceAt(int, int)","u":"getLetterOfPieceAt(int,int)"},{"p":"javachess.javachessfx.backend.pieces","c":"Piece","l":"getPathToIcon()"},{"p":"javachess.javachessfx.backend.pieces","c":"Piece","l":"getPiece()"},{"p":"javachess.javachessfx.window","c":"Piece","l":"getPiece()"},{"p":"javachess.javachessfx.backend","c":"Chessboard","l":"getPieceAt(int, int)","u":"getPieceAt(int,int)"},{"p":"javachess.javachessfx.backend","c":"Chessboard","l":"getPieceAtTheEndOfLine(int, int, int, int)","u":"getPieceAtTheEndOfLine(int,int,int,int)"},{"p":"javachess.javachessfx.backend","c":"Chessboard","l":"getPositionOfKing(char)"},{"p":"javachess.javachessfx.backend.pieces","c":"Bishop","l":"getPossibleMoves(Chessboard, int, int)","u":"getPossibleMoves(javachess.javachessfx.backend.Chessboard,int,int)"},{"p":"javachess.javachessfx.backend.pieces","c":"King","l":"getPossibleMoves(Chessboard, int, int)","u":"getPossibleMoves(javachess.javachessfx.backend.Chessboard,int,int)"},{"p":"javachess.javachessfx.backend.pieces","c":"Knight","l":"getPossibleMoves(Chessboard, int, int)","u":"getPossibleMoves(javachess.javachessfx.backend.Chessboard,int,int)"},{"p":"javachess.javachessfx.backend.pieces","c":"Pawn","l":"getPossibleMoves(Chessboard, int, int)","u":"getPossibleMoves(javachess.javachessfx.backend.Chessboard,int,int)"},{"p":"javachess.javachessfx.backend.pieces","c":"Piece","l":"getPossibleMoves(Chessboard, int, int)","u":"getPossibleMoves(javachess.javachessfx.backend.Chessboard,int,int)"},{"p":"javachess.javachessfx.backend.pieces","c":"Queen","l":"getPossibleMoves(Chessboard, int, int)","u":"getPossibleMoves(javachess.javachessfx.backend.Chessboard,int,int)"},{"p":"javachess.javachessfx.backend.pieces","c":"Rook","l":"getPossibleMoves(Chessboard, int, int)","u":"getPossibleMoves(javachess.javachessfx.backend.Chessboard,int,int)"},{"p":"javachess.javachessfx.backend","c":"Chessboard","l":"getWhiteDeadPieces()"},{"p":"javachess.javachessfx.window.util","c":"GameTime","l":"getWhitePlayTimeMinutes()"},{"p":"javachess.javachessfx.window.util","c":"GameTime","l":"getWhitePlayTimeSeconds()"},{"p":"javachess.javachessfx.backend.pieces","c":"Piece","l":"getWorth()"},{"p":"javachess.javachessfx.backend","c":"Chessboard","l":"getWorthOfDeadPieces(char)"},{"p":"javachess.javachessfx.window","c":"Piece","l":"getX()"},{"p":"javachess.javachessfx.window","c":"Piece","l":"getY()"},{"p":"javachess.javachessfx.window","c":"GameController","l":"grid"},{"p":"javachess.javachessfx.window","c":"GameController","l":"initialize()"},{"p":"javachess.javachessfx.window.util","c":"GameTime","l":"initialPlayTimeMinutes"},{"p":"javachess.javachessfx.window.util","c":"GameTime","l":"initialPlayTimeSeconds"},{"p":"javachess.javachessfx.backend","c":"Chessboard","l":"initialSetup()"},{"p":"javachess.javachessfx.backend.pieces","c":"Piece","l":"isPieceAnAlly(Piece)","u":"isPieceAnAlly(javachess.javachessfx.backend.pieces.Piece)"},{"p":"javachess.javachessfx.backend","c":"Chessboard","l":"isPromotionPossible(Piece, int)","u":"isPromotionPossible(javachess.javachessfx.backend.pieces.Piece,int)"},{"p":"javachess.javachessfx.backend.pieces","c":"Piece","l":"isSpecialMoveAvailable"},{"p":"javachess.javachessfx.backend.pieces","c":"King","l":"isSpecialMoveAvailable()"},{"p":"javachess.javachessfx.backend.pieces","c":"Piece","l":"isSpecialMoveAvailable()"},{"p":"javachess.javachessfx.backend.pieces","c":"Rook","l":"isSpecialMoveAvailable()"},{"p":"javachess.javachessfx.backend","c":"Chessboard","l":"isTherePieceAt(int, int)","u":"isTherePieceAt(int,int)"},{"p":"javachess.javachessfx.backend.pieces","c":"King","l":"King(char)","u":"%3Cinit%3E(char)"},{"p":"javachess.javachessfx.backend.pieces","c":"King","l":"King(char, boolean)","u":"%3Cinit%3E(char,boolean)"},{"p":"javachess.javachessfx.backend.pieces","c":"King","l":"King(Piece)","u":"%3Cinit%3E(javachess.javachessfx.backend.pieces.Piece)"},{"p":"javachess.javachessfx.backend.pieces","c":"Knight","l":"Knight(char)","u":"%3Cinit%3E(char)"},{"p":"javachess.javachessfx.backend.pieces","c":"Knight","l":"Knight(Piece)","u":"%3Cinit%3E(javachess.javachessfx.backend.pieces.Piece)"},{"p":"javachess.javachessfx.backend.pieces","c":"Piece","l":"letter"},{"p":"javachess.javachessfx.backend","c":"Chessboard","l":"letterToNumber(char)"},{"p":"javachess.javachessfx.backend","c":"Chessboard","l":"loadChessboardFromAlgebraicNotation(String)","u":"loadChessboardFromAlgebraicNotation(java.lang.String)"},{"p":"javachess.javachessfx","c":"Main","l":"Main()","u":"%3Cinit%3E()"},{"p":"javachess.javachessfx","c":"Main","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"javachess.javachessfx.window","c":"GameController","l":"minutes"},{"p":"javachess.javachessfx.window","c":"GameController","l":"move"},{"p":"javachess.javachessfx.backend","c":"Chessboard","l":"numberToLetter(int)"},{"p":"javachess.javachessfx.backend.pieces","c":"Piece","l":"pathToIcon"},{"p":"javachess.javachessfx.backend.pieces","c":"Pawn","l":"Pawn(char)","u":"%3Cinit%3E(char)"},{"p":"javachess.javachessfx.backend.pieces","c":"Pawn","l":"Pawn(char, boolean)","u":"%3Cinit%3E(char,boolean)"},{"p":"javachess.javachessfx.backend.pieces","c":"Pawn","l":"Pawn(Piece)","u":"%3Cinit%3E(javachess.javachessfx.backend.pieces.Piece)"},{"p":"javachess.javachessfx.window","c":"Piece","l":"piece"},{"p":"javachess.javachessfx.backend.pieces","c":"Piece","l":"Piece(char)","u":"%3Cinit%3E(char)"},{"p":"javachess.javachessfx.window","c":"Piece","l":"Piece(double, double, double, Circle, Piece)","u":"%3Cinit%3E(double,double,double,javafx.scene.shape.Circle,javachess.javachessfx.backend.pieces.Piece)"},{"p":"javachess.javachessfx.backend.pieces","c":"Piece","l":"Piece(Piece)","u":"%3Cinit%3E(javachess.javachessfx.backend.pieces.Piece)"},{"p":"javachess.javachessfx.window","c":"GameController","l":"planesForPieces"},{"p":"javachess.javachessfx.window","c":"GameController","l":"pressed(MouseEvent, Piece)","u":"pressed(javafx.scene.input.MouseEvent,javachess.javachessfx.window.Piece)"},{"p":"javachess.javachessfx.backend","c":"Chessboard","l":"printChessboard(Chessboard)","u":"printChessboard(javachess.javachessfx.backend.Chessboard)"},{"p":"javachess.javachessfx.backend","c":"Chessboard","l":"promotion(int, Piece, char)","u":"promotion(int,javachess.javachessfx.backend.pieces.Piece,char)"},{"p":"javachess.javachessfx.window","c":"GameController","l":"promotionWindow()"},{"p":"javachess.javachessfx.window","c":"PromotionWindowController","l":"PromotionWindowController()","u":"%3Cinit%3E()"},{"p":"javachess.javachessfx.window","c":"PromotionWindowController","l":"queen"},{"p":"javachess.javachessfx.backend.pieces","c":"Queen","l":"Queen(char)","u":"%3Cinit%3E(char)"},{"p":"javachess.javachessfx.backend.pieces","c":"Queen","l":"Queen(Piece)","u":"%3Cinit%3E(javachess.javachessfx.backend.pieces.Piece)"},{"p":"javachess.javachessfx.window","c":"Piece","l":"radius"},{"p":"javachess.javachessfx.window","c":"GameController","l":"released(MouseEvent, Piece)","u":"released(javafx.scene.input.MouseEvent,javachess.javachessfx.window.Piece)"},{"p":"javachess.javachessfx.window","c":"GameController","l":"restoreBoard()"},{"p":"javachess.javachessfx.backend.pieces","c":"Rook","l":"Rook(char)","u":"%3Cinit%3E(char)"},{"p":"javachess.javachessfx.backend.pieces","c":"Rook","l":"Rook(char, boolean)","u":"%3Cinit%3E(char,boolean)"},{"p":"javachess.javachessfx.backend.pieces","c":"Rook","l":"Rook(Piece)","u":"%3Cinit%3E(javachess.javachessfx.backend.pieces.Piece)"},{"p":"javachess.javachessfx.window","c":"GameController","l":"save(MouseEvent)","u":"save(javafx.scene.input.MouseEvent)"},{"p":"javachess.javachessfx.window","c":"GameController","l":"seconds"},{"p":"javachess.javachessfx.window.util","c":"GameTime","l":"setBlackPlayTimeMinutes(int)"},{"p":"javachess.javachessfx.window.util","c":"GameTime","l":"setBlackPlayTimeSeconds(int)"},{"p":"javachess.javachessfx.window.util","c":"GameTime","l":"setWhitePlayTimeMinutes(int)"},{"p":"javachess.javachessfx.window.util","c":"GameTime","l":"setWhitePlayTimeSeconds(int)"},{"p":"javachess.javachessfx.window","c":"Piece","l":"setX(double)"},{"p":"javachess.javachessfx.window","c":"Piece","l":"setY(double)"},{"p":"javachess.javachessfx.window","c":"GameController","l":"showPossibleMoves(int, int)","u":"showPossibleMoves(int,int)"},{"p":"javachess.javachessfx.window","c":"GameController","l":"size"},{"p":"javachess.javachessfx.window","c":"GameController","l":"spots"},{"p":"javachess.javachessfx.window","c":"GameController","l":"squareSize"},{"p":"javachess.javachessfx","c":"Main","l":"start(Stage)","u":"start(javafx.stage.Stage)"},{"p":"javachess.javachessfx.window","c":"GameController","l":"startTheGame()"},{"p":"javachess.javachessfx.window","c":"GameController","l":"timer"},{"p":"javachess.javachessfx.backend","c":"Chessboard","l":"turnIndex"},{"p":"javachess.javachessfx.window","c":"GameController","l":"updateDeadPieces()"},{"p":"javachess.javachessfx.window","c":"GameController","l":"updateTime()"},{"p":"javachess.javachessfx.window","c":"GameController","l":"white_time"},{"p":"javachess.javachessfx.backend","c":"Chessboard","l":"whiteDeadPieces"},{"p":"javachess.javachessfx.window.util","c":"GameTime","l":"whitePlayTimeMinutes"},{"p":"javachess.javachessfx.window.util","c":"GameTime","l":"whitePlayTimeSeconds"},{"p":"javachess.javachessfx.backend.pieces","c":"Piece","l":"worth"},{"p":"javachess.javachessfx.window","c":"Piece","l":"x"},{"p":"javachess.javachessfx.window","c":"Piece","l":"y"}];updateSearchResults();